package com.training.Service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.training.bean.Flat;
import com.training.bean.FlatBooking;
import com.training.dao.FlatDAO;

@Service
public class FlatServiceImpl implements FlatService {

	@Autowired
	private FlatDAO flatdao;

	public FlatDAO getFlatdao() {
		return flatdao;
	}

	public void setFlatdao(FlatDAO flatdao) {
		this.flatdao = flatdao;

	}

	public  Flat addFlat(Flat Flat) {
	Flat flat=this.flatdao.save(Flat);
	return flat;
	
}
	@Override
public  Flat updateFlat(Flat Flat) {
	Flat flat=this.flatdao.save(Flat);
	return flat;
	
}
@Override
public String delete(Flat Flat) {
   this.flatdao.delete(Flat);
   return"Flat Booking Deleted Succesfully";
}
@Override
public Flat getFlatById(int flatId) {
	 Optional<Flat> flatOptional=this.flatdao.findById(flatId);
 	if(flatOptional.isPresent())
 		return flatOptional.get();
 	else
    return null;
}
@Override
public List<Flat> getAllFlats() {
    return this.flatdao.findAll();
}

public List<Flat>getAllFlatsByCost(float cost, String availability) {
    // Implement logic to find flats by cost and availability
    // Example: flatDAO.findByCostAndAvailability(cost, availability);
    return null;
}
}