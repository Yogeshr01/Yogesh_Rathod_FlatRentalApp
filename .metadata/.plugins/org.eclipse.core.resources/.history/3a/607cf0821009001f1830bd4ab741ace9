package com.training.bean;


import java.util.List;
import java.util.Objects;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
@Entity
@Table(name="landloards")
public class Landlord {
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "lan_seq")
	@SequenceGenerator(name = "lan_seq", sequenceName = "landloard_seq1", allocationSize = 1)	   
	private int landLordId;
	@Column
	private String landlordName;
	@Column
	private int landlordAge;
	@ManyToOne
	private List<Flat>flatList;
	
	public Landlord(int landLordId, String landlordName, int landlordAge, List<Flat> flatList) {
		super();
		this.landLordId = landLordId;
		this.landlordName = landlordName;
		this.landlordAge = landlordAge;
		this.flatList = flatList;
	}

	public Landlord(String landlordName, int landlordAge, List<Flat> flatList) {
		super();
		this.landlordName = landlordName;
		this.landlordAge = landlordAge;
		this.flatList = flatList;
	}

	public Landlord(int landLordId) {
		super();
		this.landLordId = landLordId;
	}

	public Landlord() {
		super();
	}

	public int getLandLordId() {
		return landLordId;
	}

	public void setLandLordId(int landLordId) {
		this.landLordId = landLordId;
	}

	public String getLandlordName() {
		return landlordName;
	}

	public void setLandlordName(String landlordName) {
		this.landlordName = landlordName;
	}

	public int getLandlordAge() {
		return landlordAge;
	}

	public void setLandlordAge(int landlordAge) {
		this.landlordAge = landlordAge;
	}

	public List<Flat> getFlatList() {
		return flatList;
	}

	public void setFlatList(List<Flat> flatList) {
		this.flatList = flatList;
	}

	@Override
	public String toString() {
		return "Landloard [landLordId=" + landLordId + ", landlordName=" + landlordName + ", landlordAge=" + landlordAge
				+ ", flatList=" + flatList + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(landLordId);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Landlord other = (Landlord) obj;
		return landLordId == other.landLordId;
	}
        
}
	   