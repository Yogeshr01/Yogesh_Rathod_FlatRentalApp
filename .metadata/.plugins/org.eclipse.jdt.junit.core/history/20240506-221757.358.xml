<?xml version="1.0" encoding="UTF-8"?><testrun name="FlatServiceImplTest" project="03-LandlordClient" tests="7" started="7" failures="2" errors="0" ignored="0">
  <testsuite name="com.training.service.FlatServiceImplTest" time="0.516" displayname="FlatServiceImplTest" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]">
    <testcase name="testGetFlatById_NonExistingId" classname="com.training.service.FlatServiceImplTest" time="0.313" displayname="testGetFlatById_NonExistingId()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testGetFlatById_NonExistingId()]"/>
    <testcase name="testAddFlat" classname="com.training.service.FlatServiceImplTest" time="0.036" displayname="testAddFlat()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testAddFlat()]"/>
    <testcase name="testGetFlatById_ExistingId" classname="com.training.service.FlatServiceImplTest" time="0.02" displayname="testGetFlatById_ExistingId()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testGetFlatById_ExistingId()]"/>
    <testcase name="testGetAllFlats" classname="com.training.service.FlatServiceImplTest" time="0.02" displayname="testGetAllFlats()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testGetAllFlats()]"/>
    <testcase name="testUpdateFlat" classname="com.training.service.FlatServiceImplTest" time="0.014" displayname="testUpdateFlat()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testUpdateFlat()]"/>
    <testcase name="testGetAllFlatsByCost" classname="com.training.service.FlatServiceImplTest" time="0.043" displayname="testGetAllFlatsByCost()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testGetAllFlatsByCost()]">
      <failure>
        <expected>2</expected>
        <actual>1</actual>
        org.opentest4j.AssertionFailedError: expected: &lt;2&gt; but was: &lt;1&gt;&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:145)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:531)&#13;
	at com.training.service.FlatServiceImplTest.testGetAllFlatsByCost(FlatServiceImplTest.java:127)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;

      </failure>
    </testcase>
    <testcase name="testDeleteFlat" classname="com.training.service.FlatServiceImplTest" time="0.015" displayname="testDeleteFlat()" uniqueid="[engine:junit-jupiter]/[class:com.training.service.FlatServiceImplTest]/[method:testDeleteFlat()]">
      <failure>
        <expected>Flat Booking Deleted Successfully</expected>
        <actual>Flat Booking Deleted Succesfully</actual>
        org.opentest4j.AssertionFailedError: expected: &lt;Flat Booking Deleted Successfully&gt; but was: &lt;Flat Booking Deleted Succesfully&gt;&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)&#13;
	at com.training.service.FlatServiceImplTest.testDeleteFlat(FlatServiceImplTest.java:72)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;

      </failure>
    </testcase>
  </testsuite>
</testrun>
